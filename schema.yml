openapi: 3.0.3
info:
  title: gravity
  version: 0.0.1
paths:
  /api/v1/auth/users:
    get:
      operationId: api.get_users
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthAuthUsersOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: API Users
      tags:
      - roles/api
  /api/v1/auth/users/{username}:
    delete:
      operationId: api.delete_users
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: API Users
      tags:
      - roles/api
    post:
      operationId: api.put_users
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthAuthUsersPut'
      responses:
        "204":
          description: No Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: API Users
      tags:
      - roles/api
  /api/v1/backup/start:
    post:
      description: Start a backup.
      operationId: backup.start
      parameters:
      - in: query
        name: wait
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupBackupStatus'
          description: OK
      summary: Backup start
      tags:
      - roles/backup
  /api/v1/dhcp/scopes:
    get:
      description: List all DHCP scopes.
      operationId: dhcp.get_scopes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpScopesOutput'
          description: OK
      summary: DHCP Scopes
      tags:
      - roles/dhcp
  /api/v1/dhcp/scopes/{scope}/leases:
    get:
      description: List all DHCP leases.
      operationId: dhcp.get_leases
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpLeasesOutput'
          description: OK
      summary: DHCP Leases
      tags:
      - roles/dhcp
  /api/v1/discovery/devices:
    get:
      description: List all discovered devices.
      operationId: discovery.get_devices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryDevicesOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Discovery devices
      tags:
      - roles/discovery
  /api/v1/discovery/devices/apply:
    post:
      description: Convert discovered device into DHCP lease/DNS record.
      operationId: discovery.apply_device
      parameters:
      - in: query
        name: relKey
        schema:
          type: string
      - in: query
        name: dhcpScope
        schema:
          type: string
      - in: query
        name: dnsZone
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Apply Discovered devices
      tags:
      - roles/discovery
  /api/v1/discovery/subnets:
    get:
      description: List all Discovery subnets.
      operationId: discovery.get_subnets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverySubnetsOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Discovery subnets
      tags:
      - roles/discovery
  /api/v1/dns/zones:
    get:
      description: List all DNS Zones.
      operationId: dns.zones
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZonesOutput'
          description: OK
      summary: DNS Zones
      tags:
      - roles/dns
  /api/v1/dns/zones/{zone}/records:
    get:
      description: List all DNS Records within a zone.
      operationId: dns.get_records
      parameters:
      - in: path
        name: zone
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZoneRecordsOutput'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DNS Records
      tags:
      - roles/dns
  /api/v1/etcd/join:
    post:
      description: Join nodes to the cluster.
      operationId: etcd.join_member
      parameters:
      - in: query
        name: peer
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EtcdEtcdJoinOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Etcd join
      tags:
      - roles/etcd
  /api/v1/etcd/members:
    get:
      description: List all cluster members.
      operationId: etcd.get_members
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EtcdMembersOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Etcd members
      tags:
      - roles/etcd
components:
  schemas:
    AuthAuthUsersOutput:
      properties:
        users:
          items:
            $ref: '#/components/schemas/AuthUser'
          nullable: true
          type: array
      type: object
    AuthAuthUsersPut:
      properties:
        password:
          type: string
      type: object
    AuthUser:
      properties:
        username:
          type: string
      type: object
    BackupBackupStatus:
      properties:
        duration:
          type: integer
        error: {}
        filename:
          type: string
        size:
          type: integer
        status:
          type: string
      type: object
    DhcpLease:
      properties:
        address:
          type: string
        addressLeaseTime:
          type: string
        hostname:
          type: string
        scopeKey:
          type: string
      type: object
    DhcpLeasesOutput:
      properties:
        leases:
          items:
            $ref: '#/components/schemas/DhcpLease'
          nullable: true
          type: array
      type: object
    DhcpOption:
      properties:
        tag:
          minimum: 0
          nullable: true
          type: integer
        tagName:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        value64:
          items:
            type: string
          nullable: true
          type: array
      type: object
    DhcpScope:
      properties:
        default:
          type: boolean
        dns:
          properties:
            addZoneInHostname:
              type: boolean
            search:
              items:
                type: string
              nullable: true
              type: array
            zone:
              type: string
          type: object
        options:
          items:
            $ref: '#/components/schemas/DhcpOption'
          nullable: true
          type: array
        range:
          properties:
            end:
              type: string
            start:
              type: string
          type: object
        subnetCidr:
          type: string
        ttl:
          type: integer
      type: object
    DhcpScopesOutput:
      properties:
        scopes:
          items:
            $ref: '#/components/schemas/DhcpScope'
          nullable: true
          type: array
      type: object
    DiscoveryDevice:
      properties:
        hostname:
          type: string
        ip:
          type: string
        mac:
          type: string
      type: object
    DiscoveryDevicesOutput:
      properties:
        devices:
          items:
            $ref: '#/components/schemas/DiscoveryDevice'
          nullable: true
          type: array
      type: object
    DiscoverySubnet:
      properties:
        cidr:
          type: string
        discoveryTTL:
          type: integer
      type: object
    DiscoverySubnetsOutput:
      properties:
        subnets:
          items:
            $ref: '#/components/schemas/DiscoverySubnet'
          nullable: true
          type: array
      type: object
    DnsRecord:
      properties:
        fqdn:
          type: string
      type: object
    DnsZone:
      properties:
        authoritative:
          type: boolean
        defaultTTL:
          minimum: 0
          type: integer
        handlerConfigs:
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: array
        name:
          type: string
      type: object
    DnsZoneRecordsOutput:
      properties:
        records:
          items:
            $ref: '#/components/schemas/DnsRecord'
          nullable: true
          type: array
      type: object
    DnsZonesOutput:
      properties:
        zones:
          items:
            $ref: '#/components/schemas/DnsZone'
          nullable: true
          type: array
      type: object
    EtcdEtcdJoinOutput:
      properties:
        env:
          type: string
      type: object
    EtcdMember:
      properties:
        id:
          minimum: 0
          type: integer
        name:
          type: string
      type: object
    EtcdMembersOutput:
      properties:
        members:
          items:
            $ref: '#/components/schemas/EtcdMember'
          nullable: true
          type: array
      type: object
    RestErrResponse:
      properties:
        code:
          description: Application-specific error code.
          type: integer
        context:
          additionalProperties: {}
          description: Application context.
          type: object
        error:
          description: Error message.
          type: string
        status:
          description: Status text.
          type: string
      type: object
  securitySchemes:
    Admin:
      description: Admin access
      scheme: basic
      type: http
