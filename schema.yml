openapi: 3.0.3
info:
  title: gravity
  version: 0.0.1
paths:
  /api/v1/auth/users:
    delete:
      operationId: api.delete_users
      parameters:
      - in: query
        name: username
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: API Users
      tags:
      - roles/api
    get:
      operationId: api.get_users
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthAuthUsersOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: API Users
      tags:
      - roles/api
    post:
      operationId: api.put_users
      parameters:
      - in: query
        name: username
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthAuthUsersPut'
      responses:
        "204":
          description: No Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: API Users
      tags:
      - roles/api
  /api/v1/backup/start:
    post:
      operationId: backup.start
      parameters:
      - in: query
        name: wait
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupBackupStatus'
          description: OK
      summary: Backup start
      tags:
      - roles/backup
  /api/v1/dhcp/scopes:
    delete:
      operationId: dhcp.delete_scopes
      parameters:
      - in: query
        name: scope
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DHCP Scopes
      tags:
      - roles/dhcp
    get:
      operationId: dhcp.get_scopes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpScopesOutput'
          description: OK
      summary: DHCP Scopes
      tags:
      - roles/dhcp
    post:
      operationId: dhcp.put_scopes
      parameters:
      - in: query
        name: scope
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpScopesInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DHCP Scopes
      tags:
      - roles/dhcp
  /api/v1/dhcp/scopes/leases:
    delete:
      operationId: dhcp.delete_leases
      parameters:
      - in: query
        name: identifier
        schema:
          type: string
      - in: query
        name: scope
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DHCP Leases
      tags:
      - roles/dhcp
    get:
      operationId: dhcp.get_leases
      parameters:
      - in: query
        name: scope
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpLeasesOutput'
          description: OK
      summary: DHCP Leases
      tags:
      - roles/dhcp
    post:
      operationId: dhcp.put_leases
      parameters:
      - in: query
        name: identifier
        schema:
          type: string
      - in: query
        name: scope
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpLeasesInputType2'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DHCP Leases
      tags:
      - roles/dhcp
  /api/v1/dhcp/scopes/leases/wol:
    post:
      operationId: dhcp.wol_leases
      parameters:
      - in: query
        name: identifier
        schema:
          type: string
      - in: query
        name: scope
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DHCP Leases
      tags:
      - roles/dhcp
  /api/v1/discovery/devices:
    get:
      operationId: discovery.get_devices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryDevicesOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Discovery devices
      tags:
      - roles/discovery
  /api/v1/discovery/devices/apply:
    post:
      operationId: discovery.apply_device
      parameters:
      - in: query
        name: identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryDeviceApplyInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Apply Discovered devices
      tags:
      - roles/discovery
  /api/v1/discovery/devices/delete:
    delete:
      operationId: discovery.delete_devices
      parameters:
      - in: query
        name: identifier
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Discovery devices
      tags:
      - roles/discovery
  /api/v1/discovery/subnets:
    delete:
      operationId: discovery.delete_subnets
      parameters:
      - in: query
        name: identifier
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Discovery Subnets
      tags:
      - roles/discovery
    get:
      operationId: discovery.get_subnets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverySubnetsOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Discovery subnets
      tags:
      - roles/discovery
    post:
      operationId: discovery.put_subnets
      parameters:
      - in: query
        name: identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverySubnetsInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Discovery Subnets
      tags:
      - roles/discovery
  /api/v1/dns/zones:
    delete:
      operationId: dns.delete_zones
      parameters:
      - in: query
        name: zone
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DNS Zones
      tags:
      - roles/dns
    get:
      operationId: dns.get_zones
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsZonesOutput'
          description: OK
      summary: DNS Zones
      tags:
      - roles/dns
    post:
      operationId: dns.put_zones
      parameters:
      - in: query
        name: zone
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsZoneInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DNS Zones
      tags:
      - roles/dns
  /api/v1/dns/zones/records:
    delete:
      operationId: dns.delete_records
      parameters:
      - in: query
        name: zone
        schema:
          type: string
      - in: query
        name: hostname
        schema:
          type: string
      - in: query
        name: uid
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DNS Records
      tags:
      - roles/dns
    get:
      operationId: dns.get_records
      parameters:
      - in: query
        name: zone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsRecordsOutput'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DNS Records
      tags:
      - roles/dns
    post:
      operationId: dns.put_records
      parameters:
      - in: query
        name: zone
        schema:
          type: string
      - in: query
        name: hostname
        schema:
          type: string
      - in: query
        name: uid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsRecordsInputType2'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DNS Records
      tags:
      - roles/dns
  /api/v1/etcd/join:
    post:
      operationId: etcd.join_member
      parameters:
      - in: query
        name: peer
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EtcdEtcdJoinOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Etcd join
      tags:
      - roles/etcd
  /api/v1/etcd/members:
    get:
      operationId: etcd.get_members
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EtcdMembersOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Etcd members
      tags:
      - roles/etcd
  /api/v1/instances:
    get:
      operationId: root.get_instances
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceInstancesOutput'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Instances
      tags:
      - instances
  /api/v1/roles/api:
    get:
      operationId: api.get_role_config2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleAPIConfigOutput'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Unauthorized
      security:
      - Admin: []
      summary: API role config
      tags:
      - roles/api
    post:
      operationId: api.put_role_config2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRoleAPIConfigInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      security:
      - Admin: []
      summary: API role config
      tags:
      - roles/api
  /api/v1/roles/backup:
    get:
      operationId: backup.get_role_config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRoleBackupConfigOutput'
          description: OK
      summary: Backup role config
      tags:
      - roles/backup
    post:
      operationId: backup.put_role_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRoleBackupConfigInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Backup role config
      tags:
      - roles/backup
  /api/v1/roles/dhcp:
    get:
      operationId: dhcp.get_role_config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpRoleDHCPConfigOutput'
          description: OK
      summary: DHCP role config
      tags:
      - roles/dhcp
    post:
      operationId: dhcp.put_role_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpRoleDHCPConfigInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DHCP role config
      tags:
      - roles/dhcp
  /api/v1/roles/discovery:
    get:
      operationId: discovery.get_role_config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryRoleDiscoveryConfigOutput'
          description: OK
      summary: Discovery role config
      tags:
      - roles/discovery
    post:
      operationId: discovery.put_role_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryRoleDiscoveryConfigInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Discovery role config
      tags:
      - roles/discovery
  /api/v1/roles/dns:
    get:
      operationId: dns.get_role_config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsRoleDNSConfigOutput'
          description: OK
      summary: DNS role config
      tags:
      - roles/dns
    post:
      operationId: dns.put_role_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsRoleDNSConfigInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: DNS role config
      tags:
      - roles/dns
  /api/v1/roles/monitoring:
    get:
      operationId: monitoring.get_role_config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringRoleMonitoringConfigOutput'
          description: OK
      summary: Monitoring role config
      tags:
      - roles/monitoring
    post:
      operationId: monitoring.put_role_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringRoleMonitoringConfigInput'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrResponse'
          description: Internal Server Error
      summary: Monitoring role config
      tags:
      - roles/monitoring
components:
  schemas:
    ApiRoleAPIConfigInput:
      properties:
        config:
          $ref: '#/components/schemas/ApiRoleConfig'
      type: object
    ApiRoleAPIConfigOutput:
      properties:
        config:
          $ref: '#/components/schemas/ApiRoleConfig'
      type: object
    ApiRoleConfig:
      nullable: true
      properties:
        port:
          type: integer
      type: object
    AuthAuthUsersOutput:
      properties:
        users:
          items:
            $ref: '#/components/schemas/AuthUser'
          nullable: true
          type: array
      type: object
    AuthAuthUsersPut:
      properties:
        password:
          type: string
      type: object
    AuthUser:
      properties:
        username:
          type: string
      type: object
    BackupBackupStatus:
      properties:
        duration:
          type: integer
        error: {}
        filename:
          type: string
        size:
          type: integer
        status:
          type: string
      type: object
    BackupRoleBackupConfigInput:
      properties:
        config:
          $ref: '#/components/schemas/BackupRoleConfig'
      type: object
    BackupRoleBackupConfigOutput:
      properties:
        config:
          $ref: '#/components/schemas/BackupRoleConfig'
      type: object
    BackupRoleConfig:
      nullable: true
      properties:
        accessKey:
          type: string
        bucket:
          type: string
        cronExpr:
          type: string
        enabled:
          type: boolean
        endpoint:
          type: string
        secretKey:
          type: string
      type: object
    DhcpLease:
      properties:
        address:
          type: string
        addressLeaseTime:
          type: string
        dnsZone:
          type: string
        hostname:
          type: string
        identifier:
          type: string
        scopeKey:
          type: string
      type: object
    DhcpLeasesInputType2:
      properties:
        address:
          type: string
        addressLeaseTime:
          type: string
        dnsZone:
          type: string
        hostname:
          type: string
      type: object
    DhcpLeasesOutput:
      properties:
        leases:
          items:
            $ref: '#/components/schemas/DhcpLease'
          nullable: true
          type: array
      type: object
    DhcpOption:
      properties:
        tag:
          minimum: 0
          nullable: true
          type: integer
        tagName:
          type: string
        value:
          nullable: true
          type: string
        value64:
          items:
            type: string
          nullable: true
          type: array
      type: object
    DhcpRoleConfig:
      nullable: true
      properties:
        leaseNegotiateTimeout:
          type: integer
        port:
          type: integer
      type: object
    DhcpRoleDHCPConfigInput:
      properties:
        config:
          $ref: '#/components/schemas/DhcpRoleConfig'
      type: object
    DhcpRoleDHCPConfigOutput:
      properties:
        config:
          $ref: '#/components/schemas/DhcpRoleConfig'
      type: object
    DhcpScope:
      properties:
        default:
          type: boolean
        dns:
          properties:
            addZoneInHostname:
              type: boolean
            search:
              items:
                type: string
              nullable: true
              type: array
            zone:
              type: string
          type: object
        ipam:
          additionalProperties:
            type: string
          nullable: true
          type: object
        options:
          items:
            $ref: '#/components/schemas/DhcpOption'
          nullable: true
          type: array
        scope:
          type: string
        subnetCidr:
          type: string
        ttl:
          type: integer
      type: object
    DhcpScopesInput:
      properties:
        default:
          type: boolean
        dns:
          properties:
            addZoneInHostname:
              type: boolean
            search:
              items:
                type: string
              nullable: true
              type: array
            zone:
              type: string
          type: object
        ipam:
          additionalProperties:
            type: string
          nullable: true
          type: object
        options:
          items:
            $ref: '#/components/schemas/DhcpOption'
          nullable: true
          type: array
        subnetCidr:
          type: string
        ttl:
          type: integer
      type: object
    DhcpScopesOutput:
      properties:
        scopes:
          items:
            $ref: '#/components/schemas/DhcpScope'
          nullable: true
          type: array
      type: object
    DiscoveryDevice:
      properties:
        hostname:
          type: string
        ip:
          type: string
        mac:
          type: string
      type: object
    DiscoveryDeviceApplyInput:
      properties:
        dhcpScope:
          type: string
        dnsZone:
          type: string
        to:
          enum:
          - dhcp
          - dns
          type: string
      type: object
    DiscoveryDevicesOutput:
      properties:
        devices:
          items:
            $ref: '#/components/schemas/DiscoveryDevice'
          nullable: true
          type: array
      type: object
    DiscoveryRoleConfig:
      nullable: true
      properties:
        enabled:
          type: boolean
      type: object
    DiscoveryRoleDiscoveryConfigInput:
      properties:
        config:
          $ref: '#/components/schemas/DiscoveryRoleConfig'
      type: object
    DiscoveryRoleDiscoveryConfigOutput:
      properties:
        config:
          $ref: '#/components/schemas/DiscoveryRoleConfig'
      type: object
    DiscoverySubnet:
      properties:
        cidr:
          type: string
        discoveryTTL:
          type: integer
      type: object
    DiscoverySubnetsInput:
      properties:
        discoveryTTL:
          type: integer
        subnetCidr:
          type: string
      type: object
    DiscoverySubnetsOutput:
      properties:
        subnets:
          items:
            $ref: '#/components/schemas/DiscoverySubnet'
          nullable: true
          type: array
      type: object
    DnsRecord:
      properties:
        data:
          type: string
        fqdn:
          type: string
        hostname:
          type: string
        mxPreference:
          minimum: 0
          type: integer
        srvPort:
          minimum: 0
          type: integer
        srvPriority:
          minimum: 0
          type: integer
        srvWeight:
          minimum: 0
          type: integer
        type:
          type: string
        uid:
          type: string
      type: object
    DnsRecordsInputType2:
      properties:
        data:
          type: string
        mxPreference:
          minimum: 0
          type: integer
        srvPort:
          minimum: 0
          type: integer
        srvPriority:
          minimum: 0
          type: integer
        srvWeight:
          minimum: 0
          type: integer
        type:
          type: string
      type: object
    DnsRecordsOutput:
      properties:
        records:
          items:
            $ref: '#/components/schemas/DnsRecord'
          nullable: true
          type: array
      type: object
    DnsRoleConfig:
      nullable: true
      properties:
        port:
          type: integer
      type: object
    DnsRoleDNSConfigInput:
      properties:
        config:
          $ref: '#/components/schemas/DnsRoleConfig'
      type: object
    DnsRoleDNSConfigOutput:
      properties:
        config:
          $ref: '#/components/schemas/DnsRoleConfig'
      type: object
    DnsZone:
      properties:
        authoritative:
          type: boolean
        defaultTTL:
          minimum: 0
          type: integer
        handlerConfigs:
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: array
        name:
          type: string
      type: object
    DnsZoneInput:
      properties:
        authoritative:
          type: boolean
        defaultTTL:
          minimum: 0
          type: integer
        handlerConfigs:
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: array
      type: object
    DnsZonesOutput:
      properties:
        zones:
          items:
            $ref: '#/components/schemas/DnsZone'
          nullable: true
          type: array
      type: object
    EtcdEtcdJoinOutput:
      properties:
        env:
          type: string
      type: object
    EtcdMember:
      properties:
        id:
          minimum: 0
          type: integer
        name:
          type: string
      type: object
    EtcdMembersOutput:
      properties:
        members:
          items:
            $ref: '#/components/schemas/EtcdMember'
          nullable: true
          type: array
      type: object
    InstanceInstanceInfo:
      properties:
        identifier:
          type: string
        ip:
          type: string
        roles:
          type: string
        version:
          type: string
      type: object
    InstanceInstancesOutput:
      properties:
        instances:
          items:
            $ref: '#/components/schemas/InstanceInstanceInfo'
          nullable: true
          type: array
      type: object
    MonitoringRoleConfig:
      nullable: true
      properties:
        port:
          type: integer
      type: object
    MonitoringRoleMonitoringConfigInput:
      properties:
        config:
          $ref: '#/components/schemas/MonitoringRoleConfig'
      type: object
    MonitoringRoleMonitoringConfigOutput:
      properties:
        config:
          $ref: '#/components/schemas/MonitoringRoleConfig'
      type: object
    RestErrResponse:
      properties:
        code:
          description: Application-specific error code.
          type: integer
        context:
          additionalProperties: {}
          description: Application context.
          type: object
        error:
          description: Error message.
          type: string
        status:
          description: Status text.
          type: string
      type: object
  securitySchemes:
    Admin:
      description: Admin access
      scheme: basic
      type: http
