name: Build (Tag)

on:
  push:
    tags:
      - v*

permissions:
  packages: write
  # Required to create releases
  contents: write
  pull-requests: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write
      packages: write
      # Required to create releases
      contents: write
      pull-requests: read
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: vars
        run: make ci--env
      - id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          flavor: |
            latest=false
          tags: |
            type=raw,value=v${{ steps.vars.outputs.version }}
      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: push
        with:
          tags: |
            ghcr.io/beryju/gravity:stable
            ghcr.io/beryju/gravity:v${{ steps.vars.outputs.version }}
          push: true
          sbom: true
          provenance: true
          platforms: linux/amd64,linux/arm64
          context: .
          build-args: |
            BUILD=${{ steps.vars.outputs.build }}
            GIT_BUILD_HASH=release
          labels: ${{ steps.meta.outputs.labels }}
      - uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3
        with:
          subject-name: ghcr.io/beryju/gravity
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: push-external-dns
        with:
          tags: |
            ghcr.io/beryju/gravity-external-dns:stable
            ghcr.io/beryju/gravity-external-dns:v${{ steps.vars.outputs.version }}
          push: true
          platforms: linux/amd64,linux/arm64
          context: .
          file: cmd/external-dns/Dockerfile
          build-args: |
            BUILD=${{ steps.vars.outputs.build }}
            GIT_BUILD_HASH=release
          labels: ${{ steps.meta.outputs.labels }}
      - uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3
        with:
          subject-name: ghcr.io/beryju/gravity-external-dns
          subject-digest: ${{ steps.push-external-dns.outputs.digest }}
          push-to-registry: true
      - uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.vars.outputs.version }}
          draft: true
          prerelease: false
          generate_release_notes: true
          body: |
            Upgrade to this version of gravity by using this container image:

            ```
            ghcr.io/beryju/gravity:v${{ steps.vars.outputs.version }}
            ```

            Upgrade to the current JS API Client using

            ```
            npm i gravity-api@${{ steps.vars.outputs.version }}
            ```

            Upgrade to the current Golang API Client using

            ```
            go get beryju.io/gravity@v${{ steps.vars.outputs.version }}
            ```

            Upgrade external-dns to use this container image:

            ```
            ghcr.io/beryju/gravity-external-dns:v${{ steps.vars.outputs.version }}
            ```
  build-cli:
    name: Build CLI
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64, amd64]
        os: [darwin, linux]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make bin/gravity-cli
      - uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.release_upload_url }}
          asset_path: ./bin/gravity-cli
          asset_name: gravity-cli_${{ matrix.os }}_${{ matrix.arch }}
          asset_content_type: application/octet-stream
