name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-unittest:
    name: Test (unittest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - uses: actions/setup-node@v4
        with:
          node-version-file: web/package.json
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - run: make web-install gen-client-ts web-build
      - run: make test-env-start
      - run: make install-deps gen-clean gen-client-go gen-external-dns
      - run: make test
      - if: ${{ always() }}
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          $(go env GOPATH)/bin/go-junit-report -in test-output -set-exit-code -iocopy -out junit.xml
      - if: ${{ always() }}
        uses: test-summary/action@v2
        with:
          paths: junit.xml
          show: "fail"
      - if: ${{ always() }}
        run: make test-env-stop
      - if: ${{ always() }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittest
      - if: ${{ always() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  test-bench:
    name: Test (bench)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - uses: actions/setup-node@v4
        with:
          node-version-file: web/package.json
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - run: make web-install gen-client-ts web-build
      - run: make test-env-start
      - run: make install-deps gen-clean gen-client-go gen-external-dns
      - run: make bench
      - if: ${{ always() }}
        run: make test-env-stop
      - if: ${{ always() }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittest
  test-e2e:
    name: Test (e2e)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: tests/go.mod
          cache: true
      - uses: actions/setup-node@v4
        with:
          node-version-file: web/package.json
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - run: make web-install gen-client-ts web-build
      - run: make install-deps gen-clean gen-client-go gen-external-dns
      - run: make test-e2e-container-build
      - run: make test-e2e
      - if: ${{ always() }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: e2e
  test-mark:
    if: always()
    needs:
      - test-unittest
      - test-e2e
      - test-bench
    runs-on: ubuntu-latest
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - run: make web-install gen-client-ts web-build
      - run: make install-deps
      - uses: golangci/golangci-lint-action@v7
        with:
          args: --timeout 5000s
