name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      attestations: write
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: vars
        run: make ci--env
      - id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ steps.vars.outputs.sha }}
      - uses: docker/build-push-action@v6.18.0
        id: push
        with:
          tags: |
            ghcr.io/beryju/gravity:latest
            ghcr.io/beryju/gravity:${{ steps.vars.outputs.sha }}
          push: ${{ github.ref == 'refs/heads/main' }}
          platforms: linux/amd64,linux/arm64
          context: .
          build-args: |
            BUILD=${{ steps.vars.outputs.build }}
            GIT_BUILD_HASH=${{ steps.vars.outputs.sha }}
          labels: ${{ steps.meta.outputs.labels }}
      - uses: actions/attest-build-provenance@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          subject-name: ghcr.io/beryju/gravity
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  build-cli:
    name: Build CLI
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    strategy:
      matrix:
        arch: [arm64, amd64]
        os: [darwin, linux]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make bin/gravity-cli
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version-file: web/package.json
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - run: make web-install gen-client-ts web-build
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
