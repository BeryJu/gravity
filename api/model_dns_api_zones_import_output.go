/*
gravity

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.25.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the DnsAPIZonesImportOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsAPIZonesImportOutput{}

// DnsAPIZonesImportOutput struct for DnsAPIZonesImportOutput
type DnsAPIZonesImportOutput struct {
	Successful *bool `json:"successful,omitempty"`
}

// NewDnsAPIZonesImportOutput instantiates a new DnsAPIZonesImportOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsAPIZonesImportOutput() *DnsAPIZonesImportOutput {
	this := DnsAPIZonesImportOutput{}
	return &this
}

// NewDnsAPIZonesImportOutputWithDefaults instantiates a new DnsAPIZonesImportOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsAPIZonesImportOutputWithDefaults() *DnsAPIZonesImportOutput {
	this := DnsAPIZonesImportOutput{}
	return &this
}

// GetSuccessful returns the Successful field value if set, zero value otherwise.
func (o *DnsAPIZonesImportOutput) GetSuccessful() bool {
	if o == nil || IsNil(o.Successful) {
		var ret bool
		return ret
	}
	return *o.Successful
}

// GetSuccessfulOk returns a tuple with the Successful field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsAPIZonesImportOutput) GetSuccessfulOk() (*bool, bool) {
	if o == nil || IsNil(o.Successful) {
		return nil, false
	}
	return o.Successful, true
}

// HasSuccessful returns a boolean if a field has been set.
func (o *DnsAPIZonesImportOutput) HasSuccessful() bool {
	if o != nil && !IsNil(o.Successful) {
		return true
	}

	return false
}

// SetSuccessful gets a reference to the given bool and assigns it to the Successful field.
func (o *DnsAPIZonesImportOutput) SetSuccessful(v bool) {
	o.Successful = &v
}

func (o DnsAPIZonesImportOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsAPIZonesImportOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Successful) {
		toSerialize["successful"] = o.Successful
	}
	return toSerialize, nil
}

type NullableDnsAPIZonesImportOutput struct {
	value *DnsAPIZonesImportOutput
	isSet bool
}

func (v NullableDnsAPIZonesImportOutput) Get() *DnsAPIZonesImportOutput {
	return v.value
}

func (v *NullableDnsAPIZonesImportOutput) Set(val *DnsAPIZonesImportOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsAPIZonesImportOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsAPIZonesImportOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsAPIZonesImportOutput(val *DnsAPIZonesImportOutput) *NullableDnsAPIZonesImportOutput {
	return &NullableDnsAPIZonesImportOutput{value: val, isSet: true}
}

func (v NullableDnsAPIZonesImportOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsAPIZonesImportOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
