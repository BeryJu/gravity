/*
gravity

Testing RolesTftpApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api

import (
	"context"
	"testing"

	openapiclient "beryju.io/gravity/api"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_api_RolesTftpApiService(t *testing.T) {
	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RolesTftpApiService TftpDeleteFiles", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RolesTftpApi.TftpDeleteFiles(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test RolesTftpApiService TftpDownloadFiles", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.RolesTftpApi.TftpDownloadFiles(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test RolesTftpApiService TftpGetFiles", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.RolesTftpApi.TftpGetFiles(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test RolesTftpApiService TftpGetRoleConfig", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.RolesTftpApi.TftpGetRoleConfig(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test RolesTftpApiService TftpPutFiles", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RolesTftpApi.TftpPutFiles(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})

	t.Run("Test RolesTftpApiService TftpPutRoleConfig", func(t *testing.T) {
		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RolesTftpApi.TftpPutRoleConfig(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)
	})
}
