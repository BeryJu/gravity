// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * External DNS Webhook Server
 *
 * Implements the external DNS webhook endpoints.
 *
 * API version: v0.15.0
 */

package externaldnsapi

import (
	"net/http"
	"strings"
)

// InitializationAPIController binds http requests to an api service and writes the service results to the http response
type InitializationAPIController struct {
	service      InitializationAPIServicer
	errorHandler ErrorHandler
}

// InitializationAPIOption for how the controller is set up.
type InitializationAPIOption func(*InitializationAPIController)

// WithInitializationAPIErrorHandler inject ErrorHandler into controller
func WithInitializationAPIErrorHandler(h ErrorHandler) InitializationAPIOption {
	return func(c *InitializationAPIController) {
		c.errorHandler = h
	}
}

// NewInitializationAPIController creates a default api controller
func NewInitializationAPIController(s InitializationAPIServicer, opts ...InitializationAPIOption) *InitializationAPIController {
	controller := &InitializationAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the InitializationAPIController
func (c *InitializationAPIController) Routes() Routes {
	return Routes{
		"Negotiate": Route{
			strings.ToUpper("Get"),
			"/",
			c.Negotiate,
		},
	}
}

// Negotiate - Initialisation and negotiates headers and returns domain filter.
func (c *InitializationAPIController) Negotiate(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.Negotiate(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = EncodeJSONResponse(result.Body, &result.Code, w)
}
